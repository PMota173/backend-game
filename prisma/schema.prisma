datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Player {
    id         String    @id @default(cuid())
    name       String
    gameRoom   GameRoom? @relation(fields: [gameRoomId], references: [id])
    gameRoomId String?
    score      Int       @default(0)

    PlayerAnswers      PlayerAnswer[]
    PlayerRoleInRounds PlayerRoleInRound[]

    votesCast PlayersVotes[] @relation("voterId")
    votesRecv PlayersVotes[] @relation("targetId")
}

model GameRoom {
    id         String      @id @default(cuid())
    gameCode   String      @unique
    name       String
    players    Player[]
    rounds     GameRound[]
    gameStatus GameStatus  @default(WAITING)
}

enum GameStatus {
    WAITING
    PLAYING
    FINISHED
}

enum RoundStatus {
    ANSWERING
    VOTING
    RESULTS
    FINISHED
}

model GameRound {
    id         String      @id @default(cuid())
    status     RoundStatus @default(ANSWERING)
    gameRoomId String
    gameRoom   GameRoom    @relation(fields: [gameRoomId], references: [id])
    questionId String
    question   Question    @relation(fields: [questionId], references: [id])

    roundNumber Int

    PlayerRoleInRound PlayerRoleInRound[]

    PlayerAnswer PlayerAnswer[]

    PlayersVotes PlayersVotes[]
}

model PlayerAnswer {
    id        String    @id @default(cuid())
    roundId   String // reference to GameRound
    GameRound GameRound @relation(fields: [roundId], references: [id])
    answer    String
    playerId  String
    Player    Player    @relation(fields: [playerId], references: [id])
}

model PlayerRoleInRound {
    id        String     @id @default(cuid())
    roundId   String // reference to GameRound
    GameRound GameRound  @relation(fields: [roundId], references: [id])
    role      PlayerRole // "impostor" or "normal"
    playerId  String
    Player    Player     @relation(fields: [playerId], references: [id])
}

enum PlayerRole {
    IMPOSTOR
    NORMAL
}

model PlayersVotes {
    id        String    @id @default(cuid())
    roundId   String // reference to GameRound
    GameRound GameRound @relation(fields: [roundId], references: [id])
    voter     Player    @relation("voterId", fields: [voterId], references: [id])
    voterId   String
    target    Player    @relation("targetId", fields: [targetId], references: [id])
    targetId  String // playerId of the player being voted for
}

model Question {
    id                String      @id @default(cuid())
    normal_question   String
    impostor_question String
    GameRound         GameRound[]
}
